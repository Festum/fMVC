
	RewriteEngine On

	# If you installed fMVC in a subfolder, you will need to
	# change the following line to match the subfolder you need.
	# http://httpd.apache.org/docs/current/mod/mod_rewrite.html#rewritebase
	RewriteBase /fMVC/

	RewriteCond $1 !^(assets|css|js|images|tools|pma|docs|robots\.txt)
	#RewriteRule ^index.html http://festum.tk/ [R=301,L]
	#RewriteCond %{SERVER_PORT} !^443$
	#RewriteRule ^(.*)$ https://%{HTTP_HOST}/$1 [R=301,L]
	#RewriteCond %{SERVER_PORT} ^443$
	#RewriteRule !^(.*)$ http://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]

	#Removes access to the system folder by users.
	#Additionally this will allow you to create a System.php controller,
	#previously this would not have been possible.
	#'system' can be replaced if you have renamed your system folder.
	RewriteCond %{REQUEST_URI} ^system.*
	RewriteRule ^(.*)$ index.php?/$1 [L]

	#When your application folder isn't in the system folder
	#This snippet prevents user access to the application folder
	#Rename 'application' to your applications folder name.
	RewriteCond %{REQUEST_URI} ^app.*
	RewriteRule ^(.*)$ index.php?/$1 [L]

	#Checks to see if the user is attempting to access a valid file,
	#such as an image or css document, if this isn't true it sends the
	#request to index.php
	RewriteCond %{REQUEST_FILENAME} !-f
	RewriteCond %{REQUEST_FILENAME} !-d
	RewriteRule ^(.*)$ index.php?/$1 [L]

<IfModule !mod_rewrite.c>
    # If we don't have mod_rewrite installed, all 404's
    # can be sent to index.php, and everything works as normal.
    ErrorDocument 404 error
</IfModule>
# Prevent file browsing
Options -Indexes